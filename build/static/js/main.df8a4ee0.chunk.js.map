{"version":3,"sources":["reducers/product-list.js","reducers/cart.js","reducers/alerts.js","reducers/index.js","store.js","components/products-service-context/index.js","components/error-overlay/index.js","components/error-overlay/error-overlay.js","components/hoc/error-boundary.js","components/app-header/index.js","components/app-header/app-header.js","components/alerts/index.js","components/alerts/alerts.js","actions/index.js","components/product-form/product-form.js","components/product-form/index.js","components/spinner/index.js","components/spinner/spinner.js","components/hoc/with-products-service.js","components/hoc/with-products.js","components/pages/new-item-page.js","components/products-list-item/index.js","components/products-list-item/products-list-item.js","components/products-list/products-list.js","components/products-list/index.js","components/pages/item-list-page.js","components/cart-table/cart-table.js","components/cart-table/index.js","components/pages/cart-page.js","components/app/index.js","components/app/app.js","index.js","services/products-service.js"],"names":["updateProducts","state","action","undefined","products","loading","error","type","payload","newItem","id","Math","floor","random","visible","productList","updateCartItems","cartItems","item","idx","count","slice","updateOrder","productId","quantity","cart","product","find","itemIndex","findIndex","price","name","total","updateCartItem","totalPrice","totalCount","updateCart","updateAlerts","alerts","alertList","alert","reducer","store","createStore","applyMiddleware","thunk","React","createContext","ProductsServiceProvider","Provider","ProductsServiceConsumer","Consumer","ErrorOverlay","className","ErrorBoundary","hasError","err","this","setState","result","props","children","Component","AppHeader","connect","itemPlural","to","title","cartTitle","Alerts","map","key","text","addedToCart","nextNotificationId","sleep","ms","Promise","resolve","setTimeout","mapDispatchToProps","addProduct","showAlert","dispatch","hideAlert","ProductForm","onSubmit","a","validate","values","requiredMsg","errors","description","render","handleSubmit","form","submitting","pristine","e","promise","then","reset","input","meta","Group","controlId","Label","Control","placeholder","isInvalid","touched","as","rows","disabled","Spinner","withProductsService","mapMethodsToProps","Wrapped","productsService","serviceProps","WithProducts","getAllProducts","cloneElement","compose","getAllProductsFromService","ownProps","data","catch","NewItemPage","Row","Col","md","span","offset","ProductsListItem","onAddedToCart","img","Media","width","height","src","alt","Body","onClick","getVisibleProductsSelector","createSelector","filter","ProductsList","lg","ItemListPage","onDecrease","onIncrease","onDelete","onCartCleared","CartTable","Table","cartItem","window","confirm","content","length","App","Container","path","exact","component","CartPage","reject","ReactDOM","value","document","getElementById"],"mappings":"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","file":"static/js/main.df8a4ee0.chunk.js","sourcesContent":["const generateRandomId = () => Math.floor(Math.random() * 100000 + 5);\r\n\r\nexport const updateProducts = (state, action) => {\r\n    if (state === undefined) {\r\n        return {\r\n            products: [],\r\n            loading: true,\r\n            error: null\r\n        };\r\n    }\r\n\r\n    switch (action.type) {\r\n        case `FETCH_ITEMS_REQUEST`:\r\n            return {\r\n                products: [],\r\n                loading: true,\r\n                error: null\r\n            };\r\n        case `FETCH_ITEMS_SUCCESS`:\r\n            return {\r\n                products: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case `FETCH_ITEMS_ERROR`:\r\n            return {\r\n                products: [],\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case `PRODUCT_ADDED_TO_LIST`:\r\n            const newItem = {\r\n                id: generateRandomId(),\r\n                visible: true,\r\n                ...action.payload\r\n            };\r\n\r\n            return {\r\n                ...state.productList,\r\n                products: [\r\n                    ...state.productList.products,\r\n                    newItem\r\n                ]\r\n            };\r\n        default:\r\n            return state.productList;\r\n    }\r\n};","const updateCartItems = (cartItems, item, idx) => {\r\n    if (item.count === 0) {\r\n        return [\r\n            ...cartItems.slice(0, idx),\r\n            ...cartItems.slice(idx + 1)\r\n        ];\r\n    }\r\n    if (idx === -1) {\r\n        return [\r\n            ...cartItems,\r\n            item\r\n        ]\r\n    } else {\r\n        return [\r\n            ...cartItems.slice(0, idx),\r\n            item,\r\n            ...cartItems.slice(idx + 1)\r\n        ]\r\n    }\r\n};\r\n\r\nconst updateCartItem = (product, item = {}, quantity) => {\r\n    const {\r\n        id = product.id,\r\n        count = 0,\r\n        price = product.price,\r\n        name = product.name,\r\n        total = 0\r\n    } = item;\r\n\r\n    return {\r\n        id,\r\n        name,\r\n        price,\r\n        count: count + quantity,\r\n        total: total + quantity * product.price\r\n    };\r\n};\r\n\r\nconst updateOrder = (state, productId, quantity) => {\r\n    const {productList: {products}, cart: {cartItems}} = state;\r\n\r\n    const product = products.find(({id}) => id === productId);\r\n    const itemIndex = cartItems.findIndex(({id}) => id === productId);\r\n    const item = cartItems[itemIndex];\r\n\r\n    const newItem = updateCartItem(product, item, quantity);\r\n\r\n    return {\r\n        ...state.cart,\r\n        totalPrice: state.cart.totalPrice + newItem.price * quantity,\r\n        totalCount: state.cart.totalCount + quantity,\r\n        cartItems: updateCartItems(cartItems, newItem, itemIndex)\r\n    };\r\n};\r\n\r\nexport const updateCart = (state, action) => {\r\n    if (state === undefined) {\r\n        return {\r\n            cartItems: [\r\n                {\r\n                    id: 1,\r\n                    name: `Secrets Of The JavaScript Ninja`,\r\n                    count: 1,\r\n                    price: 45,\r\n                    total: 45\r\n                }\r\n            ],\r\n            totalPrice: 45,\r\n            totalCount: 1,\r\n        }\r\n    }\r\n\r\n    switch(action.type) {\r\n        case `ITEM_ADDED_TO_CART`:\r\n            return updateOrder(state, action.payload, 1);\r\n        case `ITEM_REMOVED_FROM_CART`:\r\n            return updateOrder(state, action.payload, -1);\r\n        case `ITEMS_REMOVED_FROM_CART`:\r\n            const item = state.cart.cartItems.find(({id}) => id === action.payload);\r\n            return updateOrder(state, action.payload, -item.count);\r\n        case `CLEAR_CART`:\r\n            return {\r\n                ...state.cart,\r\n                cartItems: [],\r\n                totalPrice: 0,\r\n                totalCount: 0\r\n            };\r\n        default:\r\n            return state.cart;\r\n    }\r\n};","export const updateAlerts = (state, action) => {\r\n    if (state === undefined) {\r\n        return {\r\n            alerts: []\r\n        }\r\n    }\r\n\r\n    switch (action.type) {\r\n        case `SHOW_ALERT`:\r\n            return {\r\n                alerts: [\r\n                    ...state.alertList.alerts,\r\n                    action.payload\r\n                ]\r\n            };\r\n        case `HIDE_ALERT`:\r\n            const idx = state.alertList.alerts.findIndex((alert) => alert.id === action.payload.id);\r\n\r\n            return {\r\n                alerts: [\r\n                    ...state.alertList.alerts.slice(0, idx),\r\n                    ...state.alertList.alerts.slice(idx + 1)\r\n                ]\r\n            };\r\n        default:\r\n            return state.alertList;\r\n    }\r\n};","import {updateProducts} from './product-list';\r\nimport {updateCart} from './cart';\r\nimport {updateAlerts} from './alerts';\r\n\r\nconst reducer = (state, action) => {\r\n    return {\r\n        productList: updateProducts(state, action),\r\n        cart: updateCart(state, action),\r\n        alertList: updateAlerts(state, action)\r\n    };\r\n};\r\n\r\nexport default reducer;","import {createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    applyMiddleware(thunk)\r\n);\r\n\r\nexport default store;","import React from 'react';\r\n\r\nconst {\r\n    Provider: ProductsServiceProvider,\r\n    Consumer: ProductsServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n    ProductsServiceProvider,\r\n    ProductsServiceConsumer\r\n};","import ErrorOverlay from './error-overlay';\r\n\r\nexport default ErrorOverlay;","import React from 'react';\r\nimport './error-overlay.css';\r\n\r\nconst ErrorOverlay = () => {\r\n    return (\r\n        <div className=\"card card-default\">\r\n            <h1 className=\"text-danger\">Oops, some error has occurred</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorOverlay;","import React, {Component} from 'react';\r\nimport ErrorOverlay from '../error-overlay';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(err) {\r\n        this.setState({\r\n            hasError: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {hasError} = this.state;\r\n\r\n        const result = hasError\r\n            ? <ErrorOverlay />\r\n            : this.props.children;\r\n\r\n        return (\r\n            <div>\r\n                {result}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport './app-header.css';\r\n\r\nconst mapStateToProps = ({cart:{totalCount, totalPrice}}) => {\r\n    return {totalCount, totalPrice}\r\n};\r\n\r\nconst AppHeader = ({totalCount, totalPrice}) => {\r\n    const itemPlural = totalCount === 1 ? `item` : `items`;\r\n\r\n    const cartTitle = () => {\r\n        if (!totalCount || !totalPrice) return null;\r\n\r\n        const title = ` ${totalCount} ${itemPlural} ($${totalPrice})`;\r\n\r\n        return (\r\n            <span className=\"text-success\">{title}</span>\r\n        )\r\n    };\r\n\r\n    return (\r\n        <header className=\"app-header\">\r\n            <div className=\"app-header-container\">\r\n                <div className=\"app-logo\">\r\n                    <Link to=\"/\">Shop App</Link>\r\n                </div>\r\n\r\n                <nav className=\"app-nav\">\r\n                    <Link to=\"/cart\">\r\n                        <i className=\"fa fa-shopping-cart\"></i>\r\n                        Cart\r\n                        <span className=\"text-success\">{cartTitle()}</span>\r\n                    </Link>\r\n\r\n                    <Link to=\"/create-item\">\r\n                        <strong>+</strong> New Item\r\n                    </Link>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default connect(mapStateToProps)(AppHeader);","import Alerts from './alerts';\r\n\r\nexport default Alerts;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport './alerts.css';\r\n\r\nconst mapStateToProps = ({alertList:{alerts}}) => ({alerts});\r\n\r\nconst Alerts = ({alerts}) => {\r\n    const renderAlerts = () => {\r\n        return alerts.map((alert) => {\r\n            return (\r\n                <li\r\n                    key={alert.id}\r\n                    className=\"alert alert-success\"\r\n                >\r\n                    <strong>{alert.text}</strong>\r\n                </li>\r\n            )\r\n        })\r\n    };\r\n\r\n    return (\r\n        <ul className=\"alerts list-unstyled\">\r\n            {renderAlerts()}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default connect(mapStateToProps)(Alerts);","const productsLoaded = (newBooks) => {\r\n    return {\r\n        type: `FETCH_ITEMS_SUCCESS`,\r\n        payload: newBooks\r\n    }\r\n};\r\n\r\nconst productsRequested = () => {\r\n    return {\r\n        type: `FETCH_ITEMS_REQUEST`\r\n    }\r\n};\r\n\r\nconst productsError = (error) => {\r\n    return {\r\n        type: `FETCH_ITEMS_ERROR`,\r\n        payload: error\r\n    }\r\n};\r\n\r\nconst addedToCart = (id) => {\r\n    return {\r\n        type: `ITEM_ADDED_TO_CART`,\r\n        payload: id\r\n    }\r\n};\r\n\r\nconst removedFromCart = (id) => {\r\n    return {\r\n        type: `ITEM_REMOVED_FROM_CART`,\r\n        payload: id\r\n    }\r\n};\r\n\r\nconst itemsRemovedFromCart = (id) => {\r\n    return {\r\n        type: `ITEMS_REMOVED_FROM_CART`,\r\n        payload: id\r\n    }\r\n};\r\n\r\nconst clearCart = () => {\r\n    return {\r\n        type: `CLEAR_CART`\r\n    }\r\n};\r\n\r\nconst newProductAdded = (id) => {\r\n    return {\r\n        type: `PRODUCT_ADDED_TO_LIST`,\r\n        payload: id\r\n    }\r\n};\r\n\r\nconst showAlert = (id, text) => {\r\n    return {type: 'SHOW_ALERT', payload: {id, text}}\r\n};\r\n\r\nconst hideAlert = (id) => {\r\n    return {type: 'HIDE_ALERT', payload: {id}}\r\n};\r\n\r\nlet nextNotificationId = 0;\r\n\r\nconst showAlertWithTimeout = (text) => {\r\n    return function (dispatch) {\r\n        const id = nextNotificationId++;\r\n        dispatch(showAlert(id, text));\r\n\r\n        setTimeout(() => {\r\n            dispatch(hideAlert(id))\r\n        }, 3000)\r\n    }\r\n};\r\n\r\nexport {\r\n    productsRequested,\r\n    productsError,\r\n    productsLoaded,\r\n    addedToCart,\r\n    removedFromCart,\r\n    itemsRemovedFromCart,\r\n    clearCart,\r\n    newProductAdded,\r\n    showAlertWithTimeout\r\n}\r\n","import React from 'react';\r\nimport {Form, Field} from 'react-final-form'\r\nimport {Form as BForm} from 'react-bootstrap';\r\nimport {newProductAdded} from '../../actions';\r\nimport {connect} from 'react-redux';\r\nimport {showAlertWithTimeout} from '../../actions';\r\n\r\nimport './product-form.css';\r\n\r\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\nconst mapDispatchToProps = {\r\n    addProduct: newProductAdded,\r\n    showAlert: showAlertWithTimeout\r\n};\r\n\r\nconst ProductForm = ({addProduct, showAlert}) => {\r\n    const onSubmit = async (product) => {\r\n        await sleep(300);\r\n        addProduct(product);\r\n        showAlert(`New item was successfully added!`);\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            onSubmit={onSubmit}\r\n            validate={values => {\r\n                const requiredMsg = `This field is required`;\r\n                const errors = {};\r\n\r\n                if (!values.name) {\r\n                    errors.name = requiredMsg;\r\n                }\r\n                if (!values.description) {\r\n                    errors.description = requiredMsg;\r\n                }\r\n                if (!values.price) {\r\n                    errors.price = requiredMsg;\r\n                }\r\n                return errors;\r\n            }}\r\n            render={({handleSubmit, form, submitting, pristine, values}) => (\r\n                <form onSubmit={(e) => {\r\n                    const promise = handleSubmit(e);\r\n                    if (!promise) return;\r\n                    promise.then(() => setTimeout(form.reset))\r\n                }}>\r\n                    <Field name=\"name\">\r\n                        {({input, meta}) => (\r\n                            <BForm.Group controlId=\"product-name\">\r\n                                <BForm.Label>Name:</BForm.Label>\r\n                                <BForm.Control\r\n                                    {...input}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Name\"\r\n                                    isInvalid={meta.error && meta.touched}\r\n                                />\r\n                                {meta.error && meta.touched && <span className=\"text-danger\">{meta.error}</span>}\r\n                            </BForm.Group>\r\n                        )}\r\n                    </Field>\r\n                    <Field name=\"description\">\r\n                        {({input, meta}) => (\r\n                            <BForm.Group controlId=\"product-description\">\r\n                                <BForm.Label>Description:</BForm.Label>\r\n                                <BForm.Control\r\n                                    as=\"textarea\"\r\n                                    {...input}\r\n                                    placeholder=\"Description\"\r\n                                    rows=\"5\"\r\n                                    isInvalid={meta.error && meta.touched}\r\n                                />\r\n                                {meta.error && meta.touched && <span className=\"text-danger\">{meta.error}</span>}\r\n                            </BForm.Group>\r\n                        )}\r\n                    </Field>\r\n                    <Field name=\"price\">\r\n                        {({input, meta}) => (\r\n                            <BForm.Group controlId=\"product-price\">\r\n                                <BForm.Label>Price:</BForm.Label>\r\n                                <BForm.Control\r\n                                    {...input}\r\n                                    type=\"number\"\r\n                                    placeholder=\"Price\"\r\n                                    isInvalid={meta.error && meta.touched}\r\n                                />\r\n                                {meta.error && meta.touched && <span className=\"text-danger\">{meta.error}</span>}\r\n                            </BForm.Group>\r\n                        )}\r\n                    </Field>\r\n                    <Field name=\"img\">\r\n                        {({input, meta}) => (\r\n                            <BForm.Group controlId=\"product-image\">\r\n                                <BForm.Label>Image Link:</BForm.Label>\r\n                                <BForm.Control\r\n                                    {...input}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Image\"\r\n                                    isInvalid={meta.error && meta.touched}\r\n                                />\r\n                                {meta.error && meta.touched && <span className=\"text-danger\">{meta.error}</span>}\r\n                            </BForm.Group>\r\n                        )}\r\n                    </Field>\r\n                    <div>\r\n                        <button\r\n                            className=\"btn btn-success float-right\"\r\n                            type=\"submit\"\r\n                            disabled={submitting}>\r\n                            Add\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        />\r\n    )\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ProductForm);","import ProductForm from './product-form';\r\n\r\nexport default ProductForm;","import Spinner from './spinner';\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"spinner\">Loading...</div>\r\n    )\r\n};\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport {ProductsServiceConsumer} from '../products-service-context';\r\n\r\nconst withProductsService = (mapMethodsToProps = () => {}) => (Wrapped) => (props) => {\r\n    return (\r\n        <ProductsServiceConsumer>\r\n            {\r\n                (productsService) => {\r\n                    const serviceProps = mapMethodsToProps(productsService);\r\n\r\n                    return (\r\n                        <Wrapped {...props} {...serviceProps} />\r\n                    )\r\n                }\r\n            }\r\n        </ProductsServiceConsumer>\r\n    )\r\n};\r\n\r\nexport default withProductsService;","import React, { Component } from 'react';\r\nimport Spinner from '../spinner';\r\nimport ErrorOverlay from '../error-overlay';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {productsRequested, productsError, productsLoaded} from '../../actions';\r\nimport withProductsService from '../hoc/with-products-service';\r\n\r\nconst mapStateToProps = ({productList: {loading, error}}) => {\r\n    return {\r\n        loading,\r\n        error\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        getAllProducts: () => {\r\n            dispatch(productsRequested());\r\n            ownProps.getAllProductsFromService()\r\n                .then((data) => dispatch(productsLoaded(data)))\r\n                .catch((err) => dispatch(productsError(err)));\r\n        }\r\n    }\r\n};\r\n\r\nconst mapMethodToProps = (productsService) => {\r\n    return {\r\n        getAllProductsFromService: productsService.getAllProducts,\r\n    }\r\n};\r\n\r\nclass WithProducts extends Component {\r\n        componentDidMount() {\r\n            const {loading, getAllProducts} = this.props;\r\n\r\n            // loading items once per page reload (demonstration purposes)\r\n            if (loading) {\r\n                getAllProducts();\r\n            }\r\n        }\r\n\r\n        render() {\r\n            const { loading, error } = this.props;\r\n\r\n            if (loading) {\r\n                return <Spinner />;\r\n            }\r\n\r\n            if (error) {\r\n                return <ErrorOverlay />;\r\n            }\r\n\r\n            return React.cloneElement(this.props.children, { ...this.props });\r\n        }\r\n}\r\n\r\nexport default compose(\r\n    withProductsService(mapMethodToProps),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(WithProducts);\r\n","import React from 'react';\r\nimport ProductForm from '../product-form';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport WithProducts from '../hoc/with-products';\r\n\r\nconst NewItemPage = () => {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Add New Product</h1>\r\n\r\n            <Row className=\"mt-4\">\r\n                <Col md={{span: 6, offset: 3}}>\r\n                    <WithProducts>\r\n                        <ProductForm/>\r\n                    </WithProducts>\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewItemPage;","import ProductsListItem from './products-list-item';\r\n\r\nexport default ProductsListItem;","import React from 'react';\r\nimport {Media} from 'react-bootstrap';\r\n\r\nimport './products-list-item.css';\r\n\r\nconst ProductsListItem = ({product, onAddedToCart}) => {\r\n    const noImageSrc = `http://keivconnect.com/static/images/logo3.png`;\r\n    const {name, description, price, img = noImageSrc} = product;\r\n\r\n    return (\r\n        <Media className=\"products-list-item\">\r\n            <img\r\n                width={100}\r\n                height={150}\r\n                src={img}\r\n                alt={`Product: ${name}`}\r\n                className=\"mr-3\"\r\n            />\r\n\r\n            <Media.Body>\r\n                <h5>\r\n                    {name}\r\n                    <span className=\"text-primary\"> (${price})</span>\r\n                </h5>\r\n\r\n                <p>\r\n                    {description}\r\n                </p>\r\n\r\n                <button\r\n                    onClick={onAddedToCart}\r\n                    className=\"btn btn-outline-primary\"\r\n                >\r\n                    Add To Cart\r\n                </button>\r\n            </Media.Body>\r\n        </Media>\r\n    )\r\n};\r\n\r\nexport default ProductsListItem;","import React from 'react';\r\nimport ProductsListItem from '../products-list-item';\r\nimport {connect} from 'react-redux';\r\nimport {addedToCart} from '../../actions';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport {createSelector} from 'reselect';\r\n\r\nimport './products-list.css';\r\n\r\nconst getProducts = (state) => state.productList.products;\r\n\r\nconst getVisibleProductsSelector = createSelector(\r\n    [getProducts],\r\n    (products) => {\r\n        return products.filter((product) => product.visible)\r\n    }\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        products: getVisibleProductsSelector(state)\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAddedToCart: (id) => {\r\n            dispatch(addedToCart(id));\r\n        }\r\n    }\r\n};\r\n\r\nconst ProductsList = ({products, onAddedToCart}) => {\r\n\r\n    return (\r\n        <Row\r\n            as=\"ul\"\r\n            className=\"list-unstyled mt-3\"\r\n        >\r\n            {\r\n                products.map((product) => {\r\n                    return (\r\n                        <Col\r\n                            as=\"li\"\r\n                            lg={6}\r\n                            className=\"mt-5 pl-4\"\r\n                            key={product.id}\r\n                        >\r\n                            <ProductsListItem\r\n                                onAddedToCart={\r\n                                    () => onAddedToCart(product.id)\r\n                                }\r\n                                product={product}\r\n                            />\r\n                        </Col>\r\n                    )\r\n                })\r\n            }\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsList);","import ProductsList from './products-list';\r\n\r\nexport default ProductsList;","import React from 'react';\r\nimport ProductsList from '../products-list';\r\nimport WithProducts from '../hoc/with-products';\r\n\r\nconst ItemListPage = () => {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Item List</h1>\r\n\r\n            <WithProducts>\r\n                <ProductsList />\r\n            </WithProducts>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ItemListPage;","import React from 'react';\r\nimport './cart-table.css';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    addedToCart,\r\n    removedFromCart,\r\n    itemsRemovedFromCart,\r\n    clearCart\r\n} from '../../actions';\r\nimport {Table} from 'react-bootstrap'\r\n\r\nconst mapStateToProps = ({cart: {cartItems, totalPrice}}) => {\r\n    return {cartItems, totalPrice}\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    onDecrease: removedFromCart,\r\n    onIncrease: addedToCart,\r\n    onDelete: itemsRemovedFromCart,\r\n    onCartCleared: clearCart\r\n};\r\n\r\nconst CartTable = ({cartItems, totalPrice, onDecrease, onIncrease, onDelete, onCartCleared, showAlert}) => {\r\n    const renderRow = (cartItem, idx) => {\r\n        const { id, name, count, total } = cartItem;\r\n\r\n        return (\r\n            <tr key={id}>\r\n                <td>{idx + 1}</td>\r\n                <td>{name}</td>\r\n                <td>{count}</td>\r\n                <td>${total}</td>\r\n                <td>\r\n                    <div className=\"pull-right\">\r\n                        <button onClick={() => onDecrease(id)}\r\n                                className=\"btn btn-outline-warning btn-sm\">\r\n                            <i className=\"fa fa-minus-circle\"></i>\r\n                        </button>\r\n                        <button onClick={() => onIncrease(id)}\r\n                                className=\"btn btn-outline-success btn-sm\">\r\n                            <i className=\"fa fa-plus-circle\"></i>\r\n                        </button>\r\n                        <button onClick={() => onDelete(id)}\r\n                                className=\"btn btn-outline-danger btn-sm\">\r\n                            <i className=\"fa fa-trash\"></i>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    const checkout = () => {\r\n        const userChoice = window.confirm(`Are you sure you want to buy these items?`);\r\n        if (!userChoice) return;\r\n        onCartCleared();\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"cart-table mt-5\">\r\n            <Table>\r\n                <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Item</th>\r\n                    <th>Count</th>\r\n                    <th>Total</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                {cartItems.map(renderRow)}\r\n                </tbody>\r\n            </Table>\r\n\r\n            <div className=\"total\">\r\n                Total Price: ${totalPrice}\r\n            </div>\r\n\r\n            <button\r\n                onClick={checkout}\r\n                className=\"btn btn-success mt-4 float-right\"\r\n            >\r\n                Checkout\r\n            </button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartTable);","import CartTable from './cart-table';\r\n\r\nexport default CartTable;","import React from 'react';\r\nimport CartTable from '../cart-table';\r\nimport WithProducts from '../hoc/with-products';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = ({cart:{cartItems}}) => ({cartItems});\r\n\r\nconst CartPage = ({cartItems}) => {\r\n    const content = cartItems.length\r\n        ?\r\n        <WithProducts>\r\n            <CartTable />\r\n        </WithProducts>\r\n        : <h5>Your cart is empty...</h5>;\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"mb-4\">Cart</h1>\r\n\r\n            {content}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(mapStateToProps)(CartPage);","import App from './app';\r\n\r\nexport default App;","import React, {Fragment} from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport {Container} from 'react-bootstrap';\r\nimport AppHeader from '../app-header';\r\nimport Alerts from '../alerts';\r\nimport {\r\n    ItemListPage,\r\n    NewItemPage,\r\n    CartPage\r\n} from '../pages';\r\n\r\nimport './app.css';\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <AppHeader />\r\n\r\n            <main>\r\n                <Container>\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={ItemListPage}/>\r\n                        <Route path=\"/create-item\" component={NewItemPage}/>\r\n                        <Route path=\"/cart\" component={CartPage}/>\r\n                    </Switch>\r\n\r\n                    <Alerts/>\r\n                </Container>\r\n            </main>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport store from './store';\nimport ProductsService from './services/products-service';\nimport {ProductsServiceProvider} from './components/products-service-context';\n\nimport ErrorBoundary from './components/hoc/error-boundary';\nimport App from './components/app';\n\nconst productsService = new ProductsService();\n\nReactDOM.render(\n    <Provider store={store}>\n        <ErrorBoundary>\n            <ProductsServiceProvider value={productsService}>\n                <Router>\n                    <App />\n                </Router>\n            </ProductsServiceProvider>\n        </ErrorBoundary>\n    </Provider>,\n    document.getElementById('root')\n);\n","export default class ProductsService {\r\n    data = [\r\n        {\r\n            id: 1,\r\n            name: `Secrets Of The JavaScript Ninja`,\r\n            description: `Secrets of the JavaScript Ninja leads you down the pathway to JavaScript enlightenment.`,\r\n            price: 45,\r\n            visible: true,\r\n            img: `https://images-na.ssl-images-amazon.com/images/I/51UYwOhvQPL._AC_SY400_.jpg`,\r\n        },\r\n        {\r\n            id: 2,\r\n            name: `Functional Programming in JavaScript`,\r\n            description: `Functional Programming in JavaScript teaches JavaScript developers functional ` +\r\n            `techniques that will improve extensibility, modularity, reusability, testability, and performance.`,\r\n            price: 35,\r\n            visible: true,\r\n            img: `https://apollo-ireland.akamaized.net/v1/files/o28l7m8pjb4q2-UA/image;s=644x461`,\r\n        },\r\n        {\r\n            id: 3,\r\n            name: `Eloquent JavaScript`,\r\n            description: `This is a book about JavaScript, programming, and the wonders of the digital.` +\r\n            `You can read it online here, or get your own paperback copy.`,\r\n            price: 49,\r\n            visible: true,\r\n            img: `https://images-na.ssl-images-amazon.com/images/I/51-5ZXYtcML._SX377_BO1,204,203,200_.jpg`,\r\n        },\r\n        {\r\n            id: 4,\r\n            name: `JavaScript for Kids`,\r\n            description: `A Playful Introduction to Programming.`,\r\n            price: 19,\r\n            visible: true,\r\n            img: `https://images-na.ssl-images-amazon.com/images/I/51tcu2bj86L._SX260_.jpg`,\r\n        },\r\n        {\r\n            id: 5,\r\n            name: `Invisible fake book`,\r\n            description: `FOR RESELECT MEMOIZATION`,\r\n            price: 0,\r\n            visible: false\r\n        }\r\n    ];\r\n\r\n    getAllProducts = () => {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                // reject(new Error(`Fake error`))\r\n\r\n                resolve(this.data);\r\n            }, 800);\r\n        });\r\n    }\r\n}"],"sourceRoot":""}